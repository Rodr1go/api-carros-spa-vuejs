version: '3'
services:
  www:
    image: nginx:alpine
    volumes:
      - ./etc/nginx/conf.d/default.conf.nginx:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - backend
      - frontend

  frontend:
    image: node:13.7
    user: ${UID}:${UID}
    working_dir: /home/node/app
    volumes:
      - ./frontend:/home/node/app
    environment: 
      NODE_ENV: development
    command: >
      sh -c "npm install
             npm run serve"

  backend:
    build:
      context: dockerize/backend
    # Dessa forma, o contêiner interage com o host em nome do usuário atual.
    # !!! NOTA: $ UID é uma variável _shell_, não uma variável de ambiente!
    # Para torná-lo disponível como uma var do shell, certifique-se de tê-lo em seu ~ / .bashrc (./.zshrc etc):
    # export UID="$UID"
    user: ${UID}:${UID}

    volumes:
      - ./backend:/app
      # Ajustes personalizados para php.ini
      # i. e. "xdebug.remote_host" para depurar o app dockerizado
      - ./etc/php:/usr/local/etc/php/local.conf.d/
    environment:
      # Adicione nossos arquivos de configuração personalizados para o php verificar
      PHP_INI_SCAN_DIR: "/usr/local/etc/php/conf.d/:/usr/local/etc/php/local.conf.d/"
    command: >
      sh -c "cp .env.example .env &&
             composer install &&
             php artisan key:generate &&
             php artisan serve --host=0.0.0.0 --port=8080"

  mysql:
    image: mysql:8.0
    container_name: mysql_test_dev
    restart: unless-stopped
    tty: true
    ports:
      - "4306:3306"
    volumes:
      - ./etc/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: teste_dev
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
